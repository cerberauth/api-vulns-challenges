name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  list-challenges:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: echo "matrix=$(ls challenges/ | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  docker-build-push:
    needs: list-challenges
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        challenge: ${{ fromJson(needs.list-challenges.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./challenges/${{ matrix.challenge }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ghcr.io/cerberauth/api-vulns-challenges/${{ matrix.challenge }}:latest
          cache-from: type=registry,ref=ghcr.io/cerberauth/api-vulns-challenges/${{ matrix.challenge }}:latest
          cache-to: type=inline

      - name: Run Server
        run: docker run -d -p 8080:8080 ghcr.io/cerberauth/api-vulns-challenges/${{ matrix.challenge }}:latest

      - name: Get JWT
        id: get-jwt
        continue-on-error: true
        run: docker run --rm ghcr.io/cerberauth/api-vulns-challenges/${{ matrix.challenge }}:latest jwt

      - name: VulnAPI
        uses: cerberauth/vulnapi-action@v1
        id: vulnapi
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          curl: 'curl http://localhost:8080 -H "Authorization: Bearer ${{ steps.get-jwt.outputs.stdout }}"'

      - name: Check for vulnerabilities
        if: ${{ steps.vulnapi.outputs.conclusion == 'failure' }}
        run: echo "Vulnerabilities found in ${{ matrix.challenge }}"

      - name: Stop Server
        if: ${{ always() }}
        run: docker stop $(docker ps -q --filter ancestor=ghcr.io/cerberauth/api-vulns-challenges/${{ matrix.challenge }}:latest)
